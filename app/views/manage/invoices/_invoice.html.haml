
= simple_form_for invoice, :remote => true, :url => manage_clients_path, :html => { :class => 'form-horizontal'} do |f|

  .control-group
    .control-label
    .controls
      .btn-group
        %a.transactions.btn
          %i.icon-book
          Transactions

  = f.input :title, :as => :string, :input_html => invoice.persisted? ? {} : { :id => nil }
  = f.input :date, :as => :string, :input_html => {:class => 'datepicker'}.merge(invoice.persisted? ? {} : { :id => nil })
  = f.input :total, :input_html => invoice.persisted? ? {} : { :id => nil, :class => ['currency'] }
  = f.input :description, :input_html => {:rows => 4}.merge( invoice.persisted? ? {} : { :id => nil } )

  = f.input :status, :as => :string, :input_html => {:disabled => true}.merge( invoice.persisted? ? {} : { :id => nil } )

  .control-group
    .control-label
      PDF Copy
    .controls
      .pdf_link.hide
        %a{:href => '#', :target => "_blank"}
          %i.icon-download-alt
          Download

  .control-group
    .control-label
    .controls
      = render :partial => 'shared/model_view_basic_buttons'

      .btn-group
        %button.put_action.btn{ :type => "button", :data => {:action => 'mark_pending', :hotkey => 'm', :attribute_enabler => 'status', :enabled_when => 'open', :confirm => "Mark this invoice as pending so others can see it?"}}
          Mark Pending

      .btn-group
        %button.put_action.btn{ :type => "button", :data => {:action => 'regenerate_pdf', :attribute_enabler => 'status', :enabled_when => 'pending,failed_payment,paid,closed,cancelled'}}
          Regenerate PDF

      .btn-group
        %button.put_action.btn{ :type => "button", :data => {:action => 'mark_paid', :attribute_enabler => 'status', :enabled_when => 'pending,failed_payment', :confirm => "This will mark the invoice as paid. You must have created an outside transaction to do this."}}
          Mark Paid

      .btn-group
        %button.put_action.btn{ :type => "button", :data => {:action => 'cancel', :attribute_enabler => 'status', :enabled_when => 'pending,failed_payment', :confirm => "This will cancel this invoice. It will be hidden from the client."}}
          Cancel

      .btn-group
        %button.put_action.btn.btn-warning{ :type => "button", :data => {:action => 'charge', :attribute_enabler => 'status', :enabled_when => 'pending,failed_payment', :confirm => "Has the client approved this?"}}
          Charge

      = render :partial => 'shared/model_view_delete_button', :locals => { :data => { :attribute_enabler => 'status', :enabled_when => 'open' } } 
  



